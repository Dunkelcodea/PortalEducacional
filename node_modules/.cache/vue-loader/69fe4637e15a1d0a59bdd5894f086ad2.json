{"remainingRequest":"D:\\Informatica\\GIT\\PortalEducacional\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Informatica\\GIT\\PortalEducacional\\src\\components\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Informatica\\GIT\\PortalEducacional\\src\\components\\Login.vue","mtime":1558818447211},{"path":"D:\\Informatica\\GIT\\PortalEducacional\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Informatica\\GIT\\PortalEducacional\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Informatica\\GIT\\PortalEducacional\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Informatica\\GIT\\PortalEducacional\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name:\"login\",\n    email:\"email\",\n  data() {\n    return {\n      name: '',\n      nameState: null,\n      emailState:null,\n      submittedNames: []\n    }\n  },\n  methods: {\n    checkFormValidity() {\n      const valid = this.$refs.form.checkValidity()\n      this.nameState = valid ? 'valid' : 'invalid'\n      this.emailState=valid?'valid':'invalid'\n      return valid\n    },\n    checkEmailValidity(){\n        const valid = this.$refs.form.checkValidity()\n        this.emailState=valid?'valid':'invalid'\n      return valid\n    },\n    resetModal() {\n      this.name = ''\n      this.nameState = null\n      this.email=''\n      this.emailState=null\n    },\n    handleOk(bvModalEvt) {\n      // Prevent modal from closing\n      bvModalEvt.preventDefault()\n      // Trigger submit handler\n      this.handleSubmit()\n    },\n    handleSubmit() {\n      // Exit when the form isn't valid\n      if (!this.checkFormValidity() ||!this.checkEmailValidity()) {\n        return\n      }\n      // Push the name to submitted names\n      this.submittedNames.push(this.name)\n      // Hide the modal manually\n      this.$nextTick(() => {\n        this.$refs.modal.hide()\n      })\n    }\n  }\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <!-- <b-button v-b-modal.modal-prevent-closing>Open Modal</b-button>\r\n\r\n    <div class=\"mt-3\">\r\n      Submitted Names:\r\n      <div v-if=\"submittedNames.length === 0\">--</div>\r\n      <ul v-else class=\"mb-0 pl-3\">\r\n        <li v-for=\"(name,index) in submittedNames\" :key=index>{{ name }}</li>\r\n      </ul>\r\n    </div> -->\r\n\r\n    <b-modal\r\n      id=\"modal-prevent-closing\"\r\n      ref=\"modal\"\r\n      title=\"Ingresar\"\r\n      @show=\"resetModal\"\r\n      @hidden=\"resetModal\"\r\n      @ok=\"handleOk\"\r\n    >\r\n      <form ref=\"form\" @submit.stop.prevent=\"handleSubmit\">\r\n        <b-form-group\r\n          :state=\"nameState\"\r\n          label=\"Usuario\"\r\n          label-for=\"name-input\"\r\n          invalid-feedback=\"El Usuaro Es Requerida\"\r\n        >\r\n          <b-form-input\r\n            id=\"name-input\"\r\n            v-model=\"name\"\r\n            :state=\"nameState\"\r\n            required\r\n          ></b-form-input>\r\n          \r\n        </b-form-group>\r\n        <b-form-group\r\n          :state=\"nameState\"\r\n          label=\"Contraseña\"\r\n          label-for=\"name-input\"\r\n          invalid-feedback=\"La Contraseña Es Requerida\"\r\n        >\r\n          <b-form-input\r\n            id=\"emails-input\"\r\n            v-model=\"email\"\r\n            :state=\"emailState\"\r\n            required\r\n          ></b-form-input>\r\n          \r\n        </b-form-group>\r\n      </form>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n      name:\"login\",\r\n      email:\"email\",\r\n    data() {\r\n      return {\r\n        name: '',\r\n        nameState: null,\r\n        emailState:null,\r\n        submittedNames: []\r\n      }\r\n    },\r\n    methods: {\r\n      checkFormValidity() {\r\n        const valid = this.$refs.form.checkValidity()\r\n        this.nameState = valid ? 'valid' : 'invalid'\r\n        this.emailState=valid?'valid':'invalid'\r\n        return valid\r\n      },\r\n      checkEmailValidity(){\r\n          const valid = this.$refs.form.checkValidity()\r\n          this.emailState=valid?'valid':'invalid'\r\n        return valid\r\n      },\r\n      resetModal() {\r\n        this.name = ''\r\n        this.nameState = null\r\n        this.email=''\r\n        this.emailState=null\r\n      },\r\n      handleOk(bvModalEvt) {\r\n        // Prevent modal from closing\r\n        bvModalEvt.preventDefault()\r\n        // Trigger submit handler\r\n        this.handleSubmit()\r\n      },\r\n      handleSubmit() {\r\n        // Exit when the form isn't valid\r\n        if (!this.checkFormValidity() ||!this.checkEmailValidity()) {\r\n          return\r\n        }\r\n        // Push the name to submitted names\r\n        this.submittedNames.push(this.name)\r\n        // Hide the modal manually\r\n        this.$nextTick(() => {\r\n          this.$refs.modal.hide()\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>"]}]}